#include <stdio.h>
#define SIZE 20
void sort(int id[],int s[]);
int binarySearch(const int a[],int ID,int low,int high);

int main(void) 
{   

   
   int a[SIZE]={12,13,14,15,16,17,19,21,22,23,24,26,27,28,29,31,32,33,36,37},i,key,temp;
   int s[SIZE]={66,67,66,70,73,74,75,75,62,32,44,46,27,12,80,63,66,90,11,66};
   puts("Data items in original order");
   

   for ( i = 0; i < SIZE; ++i) {
	  printf("\n%4d", a[i]);
	  printf("%4d", s[i]);
   } 
	sort(a,s);
	puts("");
	puts("\nData items in ascending order");
    for ( i = 0; i < SIZE; ++i) {
      printf("\n%4d", a[i]);
      printf("%4d", s[i]);
   } 
   
  
	
	printf("\nPlease input score: ");
	scanf("%d",&key);
	
	temp=binarySearch(s,key,0,SIZE-1);
	if(temp<0) 
	
	printf("\nscore not found!");
	else
	printf("the ID %d get score %d",a[temp],s[temp]);

  
}


int linearSearch(int id[],int s[],int key)   
{
int i;
for(i=0;i<SIZE;i++)
	if(id[i]==key)
		return i;

return -1;	
	
}
int binarySearch(const int a[],int ID,int low,int high)
{
	while (low <=high){
		int mid;
		mid = (low +high)/2;
		if (ID == a[mid]){
			return mid;
		}
		else if (ID< a[mid]){
			high = mid-1;
		}
		else{
			low = mid+1;
		}
	}
	return -1;
}
void sort(int id[],int s[])
{int i,pass;
                       
   for ( pass = 1; pass < SIZE; ++pass) {                   
                                                             
      
      for ( i = 0; i < SIZE - 1; ++i) {                     
                                                             
         
         if (s[i] > s[i + 1]) {                        
            int hold = s[i];                                   
            s[i] = s[i + 1];                             
            s[i + 1] = hold;
            
			hold = id[i];                                   
            id[i] = id[i + 1];                             
            id[i + 1] = hold;                               
         }                                       
      }                                   
   }                                      
	
}
