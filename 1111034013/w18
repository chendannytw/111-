#include <stdio.h>
#define SIZE 5
#define stu 10
//int binarySearch(int b[], int searchKey, int low, int high);
void sort(char *name[10],int a[][SIZE], int size, int (*compare)(int a, int b));
void swap(int *e1Ptr,int*e2Ptr);
int max,min=0;
double mld;
int ascending(int a, int b);
int descending(int a, int b);
int main(void)
{
    int key,result=0,i,j;
    
    int a[10][SIZE] = {{2,98,74,0,0},
						{3,76,32,0,0},
						{6,98,67,0,0},
						{7,89,52,0,0},
						{8,98,55,0,0},
						{9,89,38,0,0},
						{10,98,65,0,0},
						{11,99,32,0,0},
						{12,98,71,0,0},
						{13,76,90,0,0}};
	 char *name[10]=
	{"MARTIN","ABBY","KAYLEIGH","MAURICE","JAZMINE"
	,"IAN","JOSIE","BILLIE","ELSIE","ELYSE"};

    puts("name ID items in original order");
    for(j=0;j<10;j++)
    {	for (i = 1; i < SIZE-2; ++i) {
        	a[j][3]+=a[j][i];
    	}
	}
	 for(j=0;j<10;j++)
    {	 
        a[j][4]+=a[j][3]/2;
    	
	}
	
    for(j=0;j<10;j++)
    {	printf("%10s", name[j]);
	    for (i = 0; i < SIZE; ++i) {
    	    
        	printf("%4d", a[j][i]);
    	}
    	printf("\n");
	}
    
/*    printf("\n");
    for (i = 0; i < SIZE; ++i) {
        printf("%4d", a[1][i]);
    }
*/
    // bubble sort                                         
    // loop to control number of passes                    

   /* printf("%s", "Enter 1 to sort in ascending order,\n" 
          "Enter 2 to sort in descending order: ");
   int order; // 1 for ascending order or 2 for descending order
   scanf("%d", &order);
*/	
	
	
	//if (order == 1) {
      //sort(name , a, stu, ascending);
      //puts("\nData items in ascending order");
   //}  
   //else { // pass function descending
   sort(name , a, stu, descending);
   //   puts("\nData items in descending order");
  // }
	
	
	
    puts("\nName ID score sum avg");

    for(j=0;j<10;j++)
    {	printf("%10s", name[j]);
	    for (i = 0; i < SIZE; ++i) {	
			printf("%4d", a[j][i]);
    	}
    	
    	printf("\n");
	}
   max+=a[0][4];
   printf("max:%d\n",max);
    min+=a[9][4];
   printf("min:%d\n",min);  
    mld+=(max+min)/2;
   printf("mld:%.2f",mld);  
}


void sort(char *name[10],int a[][SIZE], int size, int (*compare)(int a, int b))
{char *ptr;
    int hold,pass,i;
    for (pass = 1; pass < size; ++pass) {

        // loop to control number of comparisons per pass   
        for (i = 0; i < size - pass; ++i) {

            // compare adjacent elements and swap them if first 
            // element is greater than second element           
            if ((*compare)(a[i][3],a[i + 1][3]) ) {
                ptr=name[i];
                name[i]=name[i+1];
                name[i+1]=ptr;				
				swap(&a[i][0], &a[i+1][0]);
                swap(&a[i][1], &a[i+1][1]);
                swap(&a[i][2], &a[i+1][2]);
                swap(&a[i][3], &a[i+1][3]);
                swap(&a[i][4], &a[i+1][4]);
            }
        }
    }

}

void swap(int *e1Ptr,int*e2Ptr)
{int hold;
hold=*e1Ptr;
*e1Ptr=*e2Ptr;
*e2Ptr=hold;
}


int ascending(int a, int b)                                  
{                                                              
   return b < a; // should swap if b is less than a         
}

// determine whether elements are out of order for a descending
// order sort                                               
int descending(int a, int b)                                 
{                                                              
   return b > a; // should swap if b is greater than a      
}
