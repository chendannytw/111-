#include <stdio.h>
#define SIZE 6
#define stu 13
void sort(const char** name, int a[][SIZE], int size);
void aver(int a[][SIZE]);
void rank(int a[][SIZE]);
void ccpp(int a[][SIZE]);
int main(void)
{
    int  result = 0, i, j;
    int a[stu][SIZE] = {{2,98,72,0,0,0},
                        {3,76,32,0,0,0},
                        {6,98,67,0,0,0},
                        {7,89,32,0,0,0},
                        {8,98,55,0,0,0},
                        {9,89,32,0,0,0},
                        {10,98,65,0,0,0},
                        {11,99,32,0,0,0},
                        {12,98,71,0,0,0},
                        {13,76,91,0,0,0},{14,83,72,0,0,0},{15,100,99,0,0,0},{16,94,66,0,0,0}};
    const char* name[stu] =
    { "Alice",
     "Danny",
     "Tom",
     "Nina",
     "May",
     "Sindy",
     "Steven",
     "Ellen",
     "Nicole",
     "Tan","test1","test2","test3" };
    puts("排序前:\n    姓名  座號  國文  數學  總成績 平均  排名 ");
	ccpp(a);
    aver(a);
    for (j = 0; j < stu; j++)
    {
        printf("%8s", name[j]); //印名字 
        for (i = 0; i < SIZE; ++i) {
            printf("%6d", a[j][i]);
        }                       //印排序前內容 
        printf("\n");
    }
    sort(name, a, stu);

	puts("\n排序後:\n    姓名  座號  國文  數學  總成績 平均  排名 ");
    rank(a);
    for (j = 0; j < stu; j++)
    {
        printf("%8s", name[j]);
        for (i = 0; i < SIZE; ++i) {
            printf("%6d", a[j][i]);
        }
        printf("\n");
    }
    printf("\n平均中位數為:%d", a[stu / 2][4]);
    printf("\n平均最大為:%d", a[stu - 10][4]);
    printf("\n平均最小為:%d", a[stu - 1][4]);
}

void sort(const char** name, int a[][SIZE], int size) //氣泡 
{
    const char* ptr;
    void swap(int* element1Ptr, int* element2Ptr);
    int hold, pass, i;
    for (pass = 1; pass < size; ++pass) {


        for (i = 0; i < size - pass; ++i) {


            if (a[i][3] < a[i + 1][3]) {
                ptr = name[i];
                name[i] = name[i + 1];
                name[i + 1] = ptr;
                swap(&a[i][0], &a[i + 1][0]);
                swap(&a[i][1], &a[i + 1][1]);
                swap(&a[i][2], &a[i + 1][2]);
                swap(&a[i][3], &a[i + 1][3]);
                swap(&a[i][4], &a[i + 1][4]);
            }
        }
    }

}

void swap(int* e1Ptr, int* e2Ptr)
{
    int hold;
    hold = *e1Ptr;
    *e1Ptr = *e2Ptr;
    *e2Ptr = hold;
}
void aver(int a[][SIZE]) //平均 
{
    int j, i;
    for (j = 0; j < stu; j++)
    {
        for (i = 1; i < SIZE - 2; ++i) {
            a[j][4] = (a[j][3]) / 2;
        }
    }
}
void rank(int a[][SIZE]) //排名  
{
    int j, i;
    for (j = 0; j < stu; j++)
    {
        for (i = 1; i < SIZE; ++i) {
            a[j][5] = j + 1; 
        }
    }
}
void ccpp(int a[][SIZE]) //總分  
{
    int j, i;
    for (j = 0; j < stu; j++)
    {
        for (i = 1; i < SIZE - 3; ++i) {
            a[j][3] += a[j][i]; 
        }
    }
}

