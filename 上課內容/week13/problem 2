題目 : 建立一個10*4陣列，將全班10人的學號，數學成績，計概成績放入陣列中(直接置於程式內)。
根據每個學生的平均成績，由大到小排序，印出美觀、大方的全班成績表(包含學號、成績、平均、名次)，
並印出最高平均成績與最低平均成績的同學和分數。
需使用排序、報表、中位數、取平均副程式，
資料交換需使用副程式p.322的swap( )副程式完成。
#include <stdio.h>
#define SIZE 20
//int binarySearch(int b[], int searchKey, int low, int high);
void sort(int a[][SIZE], int size);
// function main begins program execution
int main(void)
{
    int key,result=0,i;
    // initialize a
    int a[2][SIZE] = {{ 12,13,14,15,16,17,19,21,22,23,24,26,27,28,29,31,32,33,36,37 },
                   { 66,67,66,70,73,74,75,75,62,32,44,46,27,12,80,63,66,90,11,66 }};

    puts("Data items in original order");
    // output original array
    for (i = 0; i < SIZE; ++i) {
        printf("%4d", a[0][i]);
    }
    printf("\n");
    for (i = 0; i < SIZE; ++i) {
        printf("%4d", a[1][i]);
    }

    // bubble sort                                         
    // loop to control number of passes                    

    sort(a, SIZE);
    puts("\nData items in ascending order");

    // output sorted array
    for (i = 0; i < SIZE; ++i) {
        printf("%4d", a[0][i]);
    }
    printf("\n");
    for (i = 0; i < SIZE; ++i) {
        printf("%4d", a[1][i]);
    }

}


void sort(int a[][SIZE], int size)
{
    int hold,pass,i;
    for (pass = 1; pass < SIZE; ++pass) {

        // loop to control number of comparisons per pass   
        for (i = 0; i < size - pass; ++i) {

            // compare adjacent elements and swap them if first 
            // element is greater than second element           
            if (a[1][i] > a[1][i + 1]) {
                swap(&a[1][i], &a[1][i+1]);
                swap(&a[0][i], &a[0][i+1]);
            }
        }
    }

}

void swap(int *e1Ptr,int*e2Ptr)
{int hold;
hold=*e1Ptr;
*e1Ptr=*e2Ptr;
*e2Ptr=hold;
}
