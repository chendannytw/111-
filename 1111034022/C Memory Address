//When a variable is created in C, a memory address is assigned to the variable.
//The memory address is the location of where the variable is stored on the computer.
//When we assign a value to the variable, it is stored in this memory address.
//To access it, use the reference operator (&), and the result will represent where the variable is stored:

-----------------Ex1 down below--------------

#include <stdio.h>

int main() {
  int myAge = 43;
  printf("%p", &myAge);
  return 0;
}

//Output be like :0x7ffe5367e044

//Note: The memory address is in hexadecimal form (0x..). 
//You probably won't get the same result in your program.
//You should also note that &myAge is often called a "pointer". 
//A pointer basically stores the memory address of a variable as its value. 
//To print pointer values, we use the %p format specifier.
//You will learn much more about pointers in the next chapter.
//Why is it useful to know the memory address?
//Pointers are important in C, because they give you the ability to manipulate the data in the computer's memory 
//- this can reduce the code and improve the performance.
