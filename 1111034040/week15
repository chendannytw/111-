#include <stdio.h>      題1
#define SIZE 4
#define stu 10

void sort(char *name[10],int a[][SIZE], int size,int (*compare)(int a, int b));
void swap(int *e1Ptr,int*e2Ptr);
int middle(int a[][SIZE],int low,int high);
int ascending(int a, int b);
int descending(int a, int b);
int main(void)
{
    int key,result=0,i,j;
    int a[10][SIZE] = {{2,98,72,0},
						{3,76,32,0},
						{6,98,67,0},
						{7,89,32,0},
						{8,98,55,0},
						{9,89,32,0},
						{10,98,65,0},
						{11,99,32,0},
						{12,98,71,0},
						{13,76,91,0}};
	char *name[10] = {"one","two","three","four","five","six","seven","eight","nine","ten"};
    puts("Data items in original order");
    for(j=0;j<10;j++)
    { 
		for (i = 1; i < SIZE-1; ++i) 
		{
        	a[j][3]+=a[j][i];
    	}
	}
   
    for(j=0;j<10;j++)
    {
    	printf("%8s",name[j]);
		for (i = 0; i < SIZE; ++i) 
		{
        	printf("%4d", a[j][i]);
    	}
    	printf("\n");
	}
	printf("%s", "Enter 1 to sort in ascending order,\n" 
          "Enter 2 to sort in descending order: ");
    int order; // 1 for ascending order or 2 for descending order
    scanf("%d", &order);
	if (order == 1) {
      sort(name,a, stu, ascending);
      puts("\nData items in ascending order");
    }  
    else { 
      sort(name,a, stu, descending);
      puts("\nData items in descending order");
    }
    
    puts("\nData items in ascending order");
    for(j=0;j<10;j++)
    {
		printf("%8s",name[j]);
		for (i = 0; i < SIZE; ++i) 
		{
        	printf("%4d", a[j][i]);  
    	}
    	printf("%4d",j+1);
    	printf("\n");	
	}
	printf("%s%4d","最小值",a[0][3]);
	printf("\n%s%4d","最大值",a[9][3]);
	printf("\n%s%4d","中位數",middle(a,0,9));
}


void sort(char *name[10],int a[][SIZE], int size,int (*compare)(int a, int b))
{
    int hold,pass,i;
    char *ptr;
    for (pass = 1; pass < size; ++pass) {
        for (i = 0; i < size - pass; ++i) {        
            if ((*compare)(a[i][3], a[i + 1][3])) {
            ptr = name[i];
            name[i] = name[i+1];
            name[i+1] = ptr;
                swap(&a[i][0], &a[i+1][0]);
                swap(&a[i][1], &a[i+1][1]);
                swap(&a[i][2], &a[i+1][2]);
                swap(&a[i][3], &a[i+1][3]);
            }
        }
    }

}

void swap(int *e1Ptr,int*e2Ptr)
{
	int hold;
	hold=*e1Ptr;
	*e1Ptr=*e2Ptr;
	*e2Ptr=hold;
}

int middle(int a[][SIZE],int low,int high){
	int mid;
	mid = (low+high) / 2;
	return a[mid][3];
}

int ascending(int a, int b)                                  
{                                                              
   return b < a;       
}
                                               
int descending(int a, int b)                                 
{                                                              
   return b > a;     
}
-----------------------------------------------------------------------------------------------
#include <stdio.h>    題2
#include <stdlib.h>

#include <stdio.h>

// prototypes
void a(int,int,int);
void b(int,int,int);
void c(int,int,int);
void d(int,int,int);

int pp;
int main(void)
{
   // initialize array of 3 pointers to functions that each take an
   // int argument and return void                              
   void (*f[4])(int,int,int) = {a, b, c, d};    

   printf("%s", "Enter a number0, 1, 2, 3to end: ");
   size_t choice; // variable to hold user's choice
   scanf("%u", &choice);

   // process user's choice
   while (choice >= 0 && choice < 4) {

      // invoke function at location choice in array f and pass
      // choice as an argument                              
      (*f[choice])(choice,6,2);                                

      printf("%s", "Enter a number0, 1, 2, 3to end: ");
      scanf("%u", &choice);
   } 

   puts("Program execution completed.");
} 

void a(int a,int x,int ax)
{
 pp = x+ax;
   printf("You entered %d so function1 was called %d and %d\n\n", a,x,ax);
   printf("%d+%d=%d\n\n",x,ax,pp);
}

void b(int b,int y,int by)
{
	pp=y-by;
   printf("You entered %d so function2 was called%d\n\n", b,y,by);
   printf("%d-%d=%d\n\n",y,by,pp);
}

void c(int c,int z ,int cz)
{
	pp=z*cz;
   printf("You entered %d so function3 was called%d\n\n", c,z,cz);  
   printf("%d*%d=%d\n\n",z,cz,pp);
}

void d(int d,int u ,int du)
{
	pp=u/du;
   printf("You entered %d so function4 was called%d\n\n", d,u,du);  
   printf("%d/%d=%d\n\n",u,du,pp);
}
