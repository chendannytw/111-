#include <stdio.h>
#define SIZE 10

void sort(int id[], int sc[]);
int binarySearch(int b[], int searchKey, int low, int high);
void printRow(const int b[], size_t low, size_t mid, size_t high);

int main(void)
{
    int     a[SIZE] = { 2, 6, 4, 8, 10,12,89,68,45,37 }, i, key, temp;
    int score[SIZE] = { 68,42,73,94,84,99,81,78,79,91 };

    puts("Data items in original order");

    for (i = 0; i < SIZE; ++i) 
    {
        printf("\n%4d", a[i]);
        printf("%4d", score[i]);
    }

    puts("");

    sort(a, score);

    puts("\nData items in ascending order");

    for (i = 0; i < SIZE; ++i) 
    {
        printf("\n%4d", a[i]);
        printf("%4d", score[i]);
    }

    printf("\nPlease input score: ");
    scanf_s("%d", &key);

    temp = binarySearch(score, key, 0, SIZE - 1);

    if (temp < 0)
        printf("\nScore %d not found!", key);
    else
        printf("the ID %d get score %d", a[temp], score[temp]);

    puts("");
}

int binarySearch(int b[], int searchKey, int low, int high)
{
    while (low <= high)
    {
        int middle = (low + high) / 2;

        printRow(b, low, middle, high);

        if (searchKey == b[middle])
        { 
            return middle;
        }
        else if (searchKey < b[middle])
        {
            high = middle - 1;   
        }
        else 
        {
            low = middle + 1;       
        }
    } 

    return -1;
}

void sort(int id[], int sc[])
{
    int i, pass;
                  
    for (pass = 1; pass < SIZE; ++pass)
    {
        for (i = 0; i < SIZE - 1; ++i)
        {        
            if (sc[i] > sc[i + 1])
            {
                int hold = sc[i];
                sc[i] = sc[i + 1];
                sc[i + 1] = hold;

                hold = id[i];
                id[i] = id[i + 1];
                id[i + 1] = hold;
            }
        }
    }

}

void printRow(const int b[], size_t low, size_t mid, size_t high)
{
    int i;
    
    for (i = 0; i < SIZE; ++i) 
    {
        if (i < low || i > high) {
            printf("%s", "    ");
        }
        else if (i == mid)
        {
            printf("%3d*", b[i]); 
        }
        else
        { 
            printf("%3d ", b[i]);
        }
    }

    puts("");
}
