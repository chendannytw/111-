#include <stdio.h>
#define SIZE 20

void sort(int id[],int sc[]);
size_t search(const int score[], int key,size_t low, size_t high);
//int linearSearch(int id[],int sc[],int key);
// function main begins program execution
int main(void) 
{   
   // initialize a
   int     a[SIZE]={12,13,14,15,16,17,19,21,22,23,24,26,27,28,29,31,32,33,36,37},i,key,temp;
   int score[SIZE]={63,67,66,70,73,74,75,79,62,32,44,46,27,12,80,33,96,90,11,86};

   puts("Data items in original order");
   
   // output original array
   for ( i = 0; i < SIZE; ++i) {
	  printf("\n%4d", a[i]);
	  printf("%4d", score[i]);
   } 
	sort(a,score);
	puts("");
	puts("\nData items in ascending order");

   // output sorted array
   for ( i = 0; i < SIZE; ++i) {
      printf("\n%4d", a[i]);
      printf("%4d", score[i]);
   } 
   
   

	printf("\nPlease input score: ");
	scanf("%d",& key);
	
	temp=search(score,key,0,SIZE-1);
	if(temp<0) 
		printf("\nscore not found!");
	else
	    printf("the ID %d get score %d",a[temp],score[temp]);

  
}


int LinerSearch(int id[],int sc[],int key)   //如果找到， 傳回陣列位址 ，如果找不到就傳回-1 
{
int i;
for(i=0;i<SIZE;i++)
	if(id[i]==key)
		return i;

return -1;	
	
}
 
 size_t search(const int score[], int key,size_t low, size_t high) 
 {
 	while(low<=high){
 		size_t middle = (low+high)/2;
 		
		if(key ==score[middle]){
 		    return middle ;
		}
		else if (key< score [middle]){
		 	high=middle-1;
		} 
		else{
			low= middle+1;
		}
	
   }
   return -1;
	 
 }
 
