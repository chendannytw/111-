#include <stdio.h>
#include <stdlib.h>
#define SIZE 10
int lost2(int x[], int key, int low, int high);
void lost(int n[], int x[], int y[], int z[]);

int main(void) {
    int ava;
    int total = 0;

    int i;
    int n[4][SIZE] = { { 1,2,3,4,5,6,7,8,9,10},{ 40,57,50,63,77,67,77,69,96,18}, {10,61,24,57,65,51,15,13,91,20} };
    printf("before\n學號:");

    for (i = 0; i < SIZE; ++i)
        printf("%2d ", n[0][i]);
    printf("\n");
    printf("\n成績:");
    for (i = 0; i < SIZE; ++i)
        printf("%d ", n[1][i]);
    printf("\n成績:");
    for (i = 0; i < SIZE; ++i)
        printf("%d ", n[2][i]);
    printf("\n");
    printf("\n平均:");
    for (i = 0; i < SIZE; ++i) {
        n[3][i] = (n[1][i] + n[2][i]) / 2;

        printf("%d ", n[3][i]);
    }
    printf("\n");

    lost(n[0], n[1], n[2], n[3]);


    printf("\n");
    printf("after\n學號:");
    for (i = 0; i < SIZE; ++i)
        printf("%2d ", n[0][i]);
    printf("\n");
    printf("\n成績:");
    for (i = 0; i < SIZE; ++i)
        printf("%d ", n[1][i]);
    printf("\n成績:");
    for (i = 0; i < SIZE; ++i)
        printf("%d ", n[2][i]);
    printf("\n");
    printf("\n平均:");
    for (i = 0; i < SIZE; ++i)
        printf("%d ", n[3][i]);
    printf("\n");
    printf("\n名次:");
    for (i = 0; i < SIZE; ++i)
        printf("%2d ", i+1);
    printf("\n");
    printf("\n最高分");
    printf("%d",n[3][0]);
    printf("\n最低分");
    printf("%d", n[3][SIZE-1]);
    printf("\n");
    printf("中位數");
    printf("%d ", n[3][SIZE / 2]);
}





void lost(int n[], int x[], int y[], int z[]) {
    int hold, pass, i;
    void swap(int* r1ptr, int* r2ptr);
    for (pass = 1; pass < SIZE; ++pass) {
        for (i = 0; i < SIZE - pass; ++i) {
            if (z[i] < z[i + 1]) {
                swap(&x[i], &x[i + 1]);
                swap(&n[i], &n[i + 1]);
                swap(&y[i], &y[i + 1]);
                swap(&z[i], &z[i + 1]);

            }
        }
    }
}
int lost2(int x[], int key, int low, int high) {
    int mid;
    while (low <= high) {
        mid = (low + high) / 2;
        if (key == x[mid])
            return mid;
        else if (key < x[mid])
            high = mid - 1;
        else
            low = mid + 1;
    }
    return -1;
}

void swap(int* r1ptr, int* r2ptr)
{
    int hold;
    hold = *r1ptr;
    *r1ptr = *r2ptr;
    *r2ptr = hold;
}
